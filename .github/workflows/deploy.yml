name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행
  pull_request:
    branches:
      - main  # main 브랜치로의 PR이 생성되거나 업데이트될 때 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Package the application
        run: ./gradlew bootJar --no-daemon

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-app
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: spring-boot-app

      - name: Deploy to AWS EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem build/libs/*.jar ec2-user@your-ec2-ip:/home/ec2-user/
          ssh -i private_key.pem ec2-user@your-ec2-ip "sudo systemctl restart your-spring-boot-service"
